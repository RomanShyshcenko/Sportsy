# Django
SECRET_KEY=django-insecure-8j$x66@!!o$u$v(vz^=2&2*fof@tq%2-*a&@xx^(+n88$2684
DJANGO_PAGINATION_LIMIT=15
DJANGO_CORS_ORIGIN_WHITELIST=
DJANGO_DEBUG=True

# Email settings
DJANGO_EMAIL_HOST=localhost
DJANGO_EMAIL_PORT=1025
DJANGO_EMAIL_HOST_USER=test
DJANGO_EMAIL_HOST_PASSWORD=test
DJANGO_DEFAULT_FROM_EMAIL=example@email.com
DJANGO_ACCOUNT_EMAIL_SUBJECT_PREFIX=Sportsy

# Database
POSTGRES_NAME=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# Celery
CELERY_BROKER_URL=redis://redis:6379/1
CELERY_RESULT_BACKEND=redis://redis:6379/1

# Google OAuth2
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=your_token
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=your_token

# AWS settings
DJANGO_AWS_ACCESS_KEY_ID=example
DJANGO_AWS_SECRET_ACCESS_KEY=example
DJANGO_AWS_STORAGE_BUCKET_NAME=example

name: CI Pipeline

on:
  push:
    branches: [ dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set environment variables using a shell script
        run: |
          cat << EOF > set_env_vars.sh
          $(echo ${{ steps.get-aws-secret.outputs.secretValue }} | jq -r 'to_entries | .[] | "export \(.key)=\(.value)"')
          EOF
          . ./set_env_vars.sh
      - uses: actions/checkout@v3

      - name: Build and run services
        working-directory: .
        run: docker-compose up -d --build

      - name: Run tests
        working-directory: .
        run: docker-compose run --rm web python manage.py test

      - name: Stop services
        run: docker-compose down
