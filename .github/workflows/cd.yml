name: Upload to EC2

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Generate .env file
        run: |
          touch app/.env
          
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> app/.env
          echo "DJANGO_PAGINATION_LIMIT=${{ secrets.DJANGO_PAGINATION_LIMIT }}" >> app/.env
          echo "DJANGO_CORS_ORIGIN_WHITELIST=${{ secrets.DJANGO_CORS_ORIGIN_WHITELIST }}" >> app/.env
          echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> app/.env
          
          echo "DJANGO_EMAIL_HOST=${{ secrets.MY_DJANGO_EMAIL_HOSTAPI_KEY }}" >> app/.env
          echo "DJANGO_EMAIL_PORT=${{ secrets.DJANGO_EMAIL_PORT }}" >> app/.env
          echo "DJANGO_EMAIL_HOST_USER=${{ secrets.DJANGO_EMAIL_HOST_USER }}" >> app/.env
          echo "DJANGO_EMAIL_HOST_PASSWORD=${{ secrets.DJANGO_EMAIL_HOST_PASSWORD }}" >> app/.env
          echo "DJANGO_DEFAULT_FROM_EMAIL=${{ secrets.DJANGO_DEFAULT_FROM_EMAIL }}" >> app/.env
          echo "DJANGO_ACCOUNT_EMAIL_SUBJECT_PREFIX=${{ secrets.DJANGO_ACCOUNT_EMAIL_SUBJECT_PREFIX }}" >> app/.env
          
          echo "POSTGRES_NAME=${{ secrets.POSTGRES_NAME }}" >> app/.env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> app/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> app/.env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> app/.env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> app/.env
          
          echo "CELERY_BROKER_URL=${{ secrets.CELERY_BROKER_URL }}" >> app/.env
          echo "CELERY_RESULT_BACKEND=${{ secrets.CELERY_RESULT_BACKEND }}" >> app/.env
          
          echo "SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}" >> app/.env
          echo "SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }}" >> app/.env
          
          echo "DJANGO_AWS_ACCESS_KEY_ID=${{ secrets.DJANGO_AWS_ACCESS_KEY_ID }}" >> app/.env
          echo "DJANGO_AWS_SECRET_ACCESS_KEY=${{ secrets.DJANGO_AWS_SECRET_ACCESS_KEY }}" >> app/.env
          echo "DJANGO_AWS_STORAGE_BUCKET_NAME=${{ secrets.DJANGO_AWS_STORAGE_BUCKET_NAME }}" >> app/.env
              

      - name: Build and run services
        working-directory: .
        run: docker-compose up -d --build

      - name: Run tests
        working-directory: .
        run: docker-compose run --rm web pytest

      - name: Stop services
        run: docker-compose down
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/github
          chmod 600 ~/.ssh/github
          cat >> ~/.ssh/config <<END
          Host target
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/github
            LogLevel ERROR
            StrictHostKeyChecking no
          END

      - name: Run deploy
        run: |
          ssh target "cd Sportsy/ && git pull && sudo docker-compose down && sudo docker-compose -f docker-compose-prod.yml up -d --build"